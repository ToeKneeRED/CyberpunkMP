// This file is automatically generated

#pragma warning disable CS8618
#pragma warning disable CS0219

using CyberpunkSdk;
using CyberpunkSdk.Internal;
using CyberpunkSdk.Types;

namespace Cyberpunk.Rpc
{
namespace Plugins
{
public class ShopEntry
{
	public TweakDBID item;
	public uint count;
	public string description;

	public ShopEntry()
	{
	}

	public ShopEntry(IBuffer data)
	{
		ushort length = 0;
		item = new TweakDBID(data.ReadUint32(), data.ReadUint8());
		count = data.ReadUint32();
		description = data.ReadString();
	}


	public void Serialize(IBuffer data)
	{
		ushort length = 0;
		data.WriteUint32(item.Hash);
		data.WriteUint8(item.Length);
		data.WriteUint32(count);
		data.WriteString(description);
	}
}
}

namespace Plugins
{
public class TaxiJobInfo
{
	public uint id;
	public Cyberpunk.Rpc.Vector4 pickupLocation;
	public uint reward;

	public TaxiJobInfo()
	{
	}

	public TaxiJobInfo(IBuffer data)
	{
		ushort length = 0;
		id = data.ReadUint32();
		pickupLocation = new Cyberpunk.Rpc.Vector4(data);
		reward = data.ReadUint32();
	}


	public void Serialize(IBuffer data)
	{
		ushort length = 0;
		data.WriteUint32(id);
		pickupLocation.Serialize(data);
		data.WriteUint32(reward);
	}
}
}

public class Vector4
{
	public float X;
	public float Y;
	public float Z;
	public float W;

	public Vector4()
	{
	}

	public Vector4(IBuffer data)
	{
		ushort length = 0;
		X = data.ReadFloat();
		Y = data.ReadFloat();
		Z = data.ReadFloat();
		W = data.ReadFloat();
	}


	public void Serialize(IBuffer data)
	{
		ushort length = 0;
		data.WriteFloat(X);
		data.WriteFloat(Y);
		data.WriteFloat(Z);
		data.WriteFloat(W);
	}
}

namespace Plugins
{
public class DeliveryInfo
{
	public uint id;
	public TweakDBID item;
	public uint count;
	public uint reward;

	public DeliveryInfo()
	{
	}

	public DeliveryInfo(IBuffer data)
	{
		ushort length = 0;
		id = data.ReadUint32();
		item = new TweakDBID(data.ReadUint32(), data.ReadUint8());
		count = data.ReadUint32();
		reward = data.ReadUint32();
	}


	public void Serialize(IBuffer data)
	{
		ushort length = 0;
		data.WriteUint32(id);
		data.WriteUint32(item.Hash);
		data.WriteUint8(item.Length);
		data.WriteUint32(count);
		data.WriteUint32(reward);
	}
}
}

}